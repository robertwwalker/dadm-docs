---
title: "Reordering Barplot Axes"
author: "Robert W. Walker"
bibliography: "bibliography.bib"
nocite: |
     @*
format: 
   html:
     self-contained: true
     self-contained-math: true
     code-fold: true
     code-copy: hover
     code-block-border-left: true
     df-print: paged
     embed-resources: true
     fig-format: retina
     footnotes-hover: true
     html-math-method: katex
     mainfont: Playfair Display
     toc: true
     toc-title: Navigation
     theme: simplex
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(cache=TRUE, message=FALSE, warning=FALSE)
library(tidyverse)
library(hrbrthemes)
theme_set(theme_ipsum())
```

The task is easiest accomplish by creating and plotting a table.  In the event that we do not have the table, we will have to create counts.  I will first show the table.  The same technique with the addition of the count appears afterward.

# tidyTuesday Economist Data [`geom_col`]

I will rely on a small dataset of Facebook likes from the April 16, 2019 #tidyTuesday.^[Thomas Mock (2022). Tidy Tuesday: A weekly data project aimed at the R ecosystem. https://github.com/rfordatascience/tidytuesday.]

```{r}
corbyn <- readr::read_csv("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2019/2019-04-16/corbyn.csv")
corbyn
```

The data is perfect for our purposes because it is small but will also plot in an ugly order because of alphabetization.  The first thing to emphasize is that the data need be in a tabular format; the raw data will not fit this approach.  The goal of the short post is to demonstrate how to change the order of the $x$ or $y$ in a barplot.

## A Default Plot

I want to plot facebook likes and UK political figures.  I will also flip the axes, change some labels, and remove the color legend because it is obvious from the plot.

```{r}
corbyn %>% 
  ggplot() +
  aes(x=political_group, avg_facebook_likes, y=avg_facebook_likes, fill=political_group) +
  geom_col() +
  coord_flip() +
  labs(x="Political Group") + 
  guides(fill="none")
```

## Reordering political_group

The `forcats` package in the `tidyverse` contains a number of functions to assist with categorical variables.  Here I will use `fct_reorder()` which will contain two options, what do I want to reorder and what variable determines the orders.  I have provided a screen shot of the help file below.

![Help fct_reorder](img/Screenshot 2023-02-03 at 9.20.12 AM.png)

My method for integrating this into the plot is to change the $x$ axis variable.  Specifically, `fct_reorder(political_group, avg_facebook_likes)`.  I order the political groups [the factor] by the number of average facebook likes [the x].

```{r}
corbyn %>% 
  ggplot() +
  aes(x=fct_reorder(political_group, avg_facebook_likes), y=avg_facebook_likes, fill=political_group) +
  geom_col() +
  coord_flip() +
  scale_fill_viridis_d() +
  guides(fill="none") +
  labs(x="Political Group")
```

# tidyTuesday Fast Food Data [`geom_bar`]

I will rely on a dataset of Fast Food calories obtained from (at the time fastfoodnutrition.com, now) [fastfoodnutrition.org](https://fastfoodnutrition.org/) from the September 4, 2018 #tidyTuesday.^[Thomas Mock (2022). Tidy Tuesday: A weekly data project aimed at the R ecosystem. https://github.com/rfordatascience/tidytuesday.]

```{r}
library(DT)
FastFood <- read.csv(url("https://raw.githubusercontent.com/rfordatascience/tidytuesday/master/data/2018/2018-09-04/fastfood_calories.csv"), na="NA", row.names = 1) %>% mutate(restaurant = as.factor(restaurant))
datatable(FastFood, filter="top")
```

## A Default Plot

The labels are rather long so I will flip the coordinates but this is otherwise a default bar plot.

```{r}
FastFood %>% 
  ggplot() +
  aes(x=restaurant) +
  geom_bar() +
  coord_flip()
```

## A Reordered Axis Plot

The required intermediate step is to count the labels.  To accomplish this, group the data by restaurants and count the number of observations, then ungroup the data, and we can use the same technique as above.

```{r}
FastFood %>% 
  group_by(restaurant) %>%
  mutate(Count = n()) %>%
  ungroup() %>%
  ggplot() +
  aes(x=fct_reorder(restaurant, Count))  +
  geom_bar() +
  coord_flip() + 
  labs(x="Restaurant")
```

# References

```{r}
knitr::write_bib(names(sessionInfo()$otherPkgs), file="bibliography.bib")
```

